#!/bin/zsh

# Get main git branch
git_main_branch() {
	command git rev-parse --git-dir &>/dev/null || return
	local ref
	for ref in refs/{heads,remotes/{origin,upstream}}/{main,trunk,mainline,default,stable,master}; do
		if command git show-ref -q --verify "$ref"; then
			echo "${ref:t}"
			return 0
		fi
	done
	echo master
	return 1
}

cleanup_text() {
	sed $'s/\x1b\\[[0-9;]*[a-zA-Z]//g' |
		sed 's/[⭐🚧⌛👷🔑️💭🧵⏱️🔎🚀📦🏷️👀]//g' |
		sed -E 's/\[38;5;[0-9]+m\[0m(\[38;5;[0-9]+m)?\s*\[38;5;[0-9]+m—+[^—]+—+\[m//g' |
		sed -E 's/[ ]{2,}/ /g'
}

# Check if --create option was passed
CREATE_PR=false
if [[ "$1" == "--create" ]]; then
	CREATE_PR=true
fi

CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [[ $CURRENT_BRANCH =~ ([A-Za-z]+-[0-9]+) ]]; then
	CURRENT_BRANCH="${match[1]}"
fi

# Get Jira info (ignore errors)
JIRA_INFO=$(jira issue view "$CURRENT_BRANCH" --plain 2>/dev/null)
JIRA_AVAILABLE=true
if [ $? -ne 0 ]; then
	JIRA_INFO=""
	JIRA_AVAILABLE=false
fi

JIRA_INFO=$(echo "$JIRA_INFO" | cleanup_text)
DIFF=$(git diff -w --staged origin/"$(git_main_branch)")
GITHUB_TOKEN=$(gh auth token)

# Prompt templates
if [ "$JIRA_AVAILABLE" = true ]; then
	TITLE_PROMPT="I will provide a git diff and Jira ticket information.
Generate a PR title, following the conventional commit message format (fix, feat, BREAKING CHANGE).
The current branch is $CURRENT_BRANCH.

Use Jira ticket details to accurately summarize the change.

Format the PR title as:
PR_TYPE($CURRENT_BRANCH): PR_TITLE

Respond with only the PR title.

JIRA TICKET INFORMATION:
$JIRA_INFO"

	DESCRIPTION_PROMPT="I will provide git diff and Jira ticket information. Write a PR description in markdown format.

Group the changes into appropriate categories concisely under \"What\".
Use the Jira ticket details to clearly describe necessity under \"Why\".

## What
- Example change

## Why
Concise explanation based on Jira ticket

JIRA TICKET INFORMATION:
$JIRA_INFO"
else
	TITLE_PROMPT="I will provide a git diff.

Generate a PR title, following the conventional commit message format (fix, feat, BREAKING CHANGE).
The current branch is $CURRENT_BRANCH.

Format the PR title as:
PR_TYPE($CURRENT_BRANCH): PR_TITLE

Respond with only the PR title."

	DESCRIPTION_PROMPT="I will provide git diff.

Write a PR description in markdown format.

Group the changes into appropriate categories concisely under \"What\".

Clearly summarize necessity under \"Why\".

## What
- Example change

## Why
Concise explanation"
fi

ESCAPED_TITLE_PROMPT=$(echo "$TITLE_PROMPT" | jq -Rsa .)
ESCAPED_DESCRIPTION_PROMPT=$(echo "$DESCRIPTION_PROMPT" | jq -Rsa .)
ESCAPED_DIFF=$(echo "$DIFF" | jq -Rsa .)

TITLE_PAYLOAD=$(jq -n --arg title "$ESCAPED_TITLE_PROMPT" --arg diff "$ESCAPED_DIFF" '{
  model: "gpt-4o-mini",
  messages: [{role: "system", content: $title}, {role: "user", content: $diff}],
  temperature: 0.5
}')

PR_TITLE=$(curl -s -X POST "https://api.githubcopilot.com/chat/completions" \
	-H "Authorization: Bearer $GITHUB_TOKEN" \
	-H "Content-Type: application/json" \
	-d "$TITLE_PAYLOAD" | jq -r '.choices[0].message.content')

DESCRIPTION_PAYLOAD=$(jq -n --arg title "$ESCAPED_DESCRIPTION_PROMPT" --arg diff "$ESCAPED_DIFF" '{
  model: "gpt-4o-mini",
  messages: [{role: "system", content: $title}, {role: "user", content: $diff}],
  temperature: 0.5
}')

PR_DESCRIPTION=$(curl -s -X POST "https://api.githubcopilot.com/chat/completions" \
	-H "Authorization: Bearer $GITHUB_TOKEN" \
	-H "Content-Type: application/json" \
	-d "$DESCRIPTION_PAYLOAD" | jq -r '.choices[0].message.content')

if [ "$CREATE_PR" = true ]; then
	EXISTING_PR=$(gh pr list --state open --head "$CURRENT_BRANCH" --json number -q '.[].number')
	if [ -n "$EXISTING_PR" ]; then
		echo "Updating existing PR #$EXISTING_PR..."
		gh pr edit "$EXISTING_PR" --title "$PR_TITLE" --body "$PR_DESCRIPTION"
	else
		echo "Creating new draft PR..."
		gh pr create --draft --title "$PR_TITLE" --body "$PR_DESCRIPTION" -a @me --base "$(git_main_branch)" --head "$CURRENT_BRANCH"
	fi
else
	echo "PR Title:"
	echo "$PR_TITLE"
	echo "
PR Description:"
	echo "$PR_DESCRIPTION"
fi
