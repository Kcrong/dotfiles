#!/bin/zsh

# Prompt templates
COMMIT_PROMPT_TEMPLATE='I will provide a git diff. Generate a commit message, following the conventional commit message format (fix, feat, BREAKING CHANGE). The current branch is {CURRENT_BRANCH}.

Format the commit message as:
COMMIT_TYPE({CURRENT_BRANCH}): COMMIT_TYPE

Example:
If the current branch is STD-2, the output should be:
feat(STD-2): Add a new endpoint

Respond with only the commit message, without any additional text.'

CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [[ $CURRENT_BRANCH =~ ([A-Za-z]+-[0-9]+) ]]; then
  CURRENT_BRANCH="${match[1]}"
fi

# Get git diff
DIFF=$(git diff --staged)
# Get git diff excluding mock files and generated files
# DIFF=$(git diff origin/$(git_main_branch) | grep -vE '(go\.sum|_mock\.go|mocks?/|Code generated by)')

# github token
GITHUB_TOKEN=$(gh auth token)

# Replace {CURRENT_BRANCH} with actual branch name
COMMIT_PROMPT=$(echo "$COMMIT_PROMPT_TEMPLATE" | sed "s/{CURRENT_BRANCH}/$CURRENT_BRANCH/g")

# Escape the content for JSON
ESCAPED_COMMIT_PROMPT=$(echo "$COMMIT_PROMPT" | jq -Rsa .)
ESCAPED_DIFF=$(echo "$DIFF" | jq -Rsa .)

# Create JSON payload using jq
COMMIT_PAYLOAD=$(jq -n \
  --arg title "$ESCAPED_COMMIT_PROMPT" \
  --arg diff "$ESCAPED_DIFF" \
  '{
    model: "gpt-4o-mini",
    messages: [
      {
        role: "system",
        content: $title
      },
      {
        role: "user",
        content: $diff
      }
    ],
    temperature: 0.5
  }')

# Send request to GitHub Copilot API and extract PR title
COMMIT_TITLE=$(curl -s -X POST "https://api.githubcopilot.com/chat/completions" \
  -H "Authorization: Bearer $GITHUB_TOKEN" \
  -H "Content-Type: application/json" \
  -d "$COMMIT_PAYLOAD" | jq -r '.choices[0].message.content')


echo $COMMIT_TITLE

git commit -m "$COMMIT_TITLE"
